name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: ${{ steps.deploy.outputs.url }}

    env:
      NODE_VERSION: 22

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting and type checking
        run: |
          npm run lint
          npm run type:check

      - name: Run tests
        run: npm test

      - name: Run security check
        run: npm run security:check

      - name: Verify environment variables
        run: npm run verify:env
        env:
          # Authentication
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}

          # API Keys
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

          # Database
          KV_REST_API_URL: ${{ secrets.KV_REST_API_URL }}
          KV_REST_API_TOKEN: ${{ secrets.KV_REST_API_TOKEN }}

          # Sentry Configuration
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

          # App Configuration
          NEXT_PUBLIC_APP_URL: ${{ secrets.VERCEL_URL }}

      - name: Build application
        run: npm run build:sentry
        env:
          # Authentication
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}

          # API Keys
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

          # Database
          KV_REST_API_URL: ${{ secrets.KV_REST_API_URL }}
          KV_REST_API_TOKEN: ${{ secrets.KV_REST_API_TOKEN }}

          # Sentry Configuration
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

          # App Configuration
          NEXT_PUBLIC_APP_URL: ${{ secrets.VERCEL_URL }}

      - name: Deploy to Vercel
        id: deploy
        uses: vercel/actions/deploy@v1
        with:
          token: ${{ secrets.VERCEL_TOKEN }}
          org-id: ${{ secrets.VERCEL_ORG_ID }}
          project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          prod: true

      - name: Notify Slack on success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: good
          SLACK_TITLE: 'Deployment Successful :rocket:'
          SLACK_MESSAGE: 'Bedtime Stories app has been successfully deployed to production!'

      - name: Notify Slack on failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: danger
          SLACK_TITLE: 'Deployment Failed :x:'
          SLACK_MESSAGE: 'Bedtime Stories app deployment failed. Please check the GitHub Actions logs.'
